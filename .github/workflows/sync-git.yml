name: Sync from Upstream

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering
    inputs:
      upstream_repo:
        description: 'Upstream repository URL (optional, defaults to configured upstream)'
        required: false
        type: string
      upstream_branch:
        description: 'Upstream branch to sync from'
        required: false
        default: 'main'
        type: string

env:
  UPSTREAM_REPO: https://github.com/cloudwego/eino.git
  UPSTREAM_BRANCH: main

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global pull.rebase true

    - name: Add upstream remote
      run: |
        # Check if upstream remote exists
        if git remote get-url upstream 2>/dev/null; then
          echo "Upstream remote already exists"
          git remote -v
        else
          # Add upstream remote
          if [ -n "${{ github.event.inputs.upstream_repo }}" ]; then
            echo "Using upstream repo from manual input: ${{ github.event.inputs.upstream_repo }}"
            git remote add upstream "${{ github.event.inputs.upstream_repo }}"
          else
            echo "Adding default upstream remote: $UPSTREAM_REPO"
            git remote add upstream "$UPSTREAM_REPO"
          fi
          echo "Upstream remote configured:"
          git remote -v
        fi

    - name: Check for changes
      id: check_changes
      run: |
        UPSTREAM_BRANCH="${{ github.event.inputs.upstream_branch || '$UPSTREAM_BRANCH' }}"
        
        # Fetch from upstream to check for changes
        git fetch upstream
        
        # Compare local main with upstream
        if git diff --quiet HEAD upstream/$UPSTREAM_BRANCH; then
          echo "No changes to sync"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Sync changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        UPSTREAM_BRANCH="${{ github.event.inputs.upstream_branch || '$UPSTREAM_BRANCH' }}"
        
        # Pull with rebase (matching your local workflow)
        if git pull upstream $UPSTREAM_BRANCH; then
          echo "Successfully pulled and rebased upstream changes"
        else
          echo "Rebase conflicts detected. Manual intervention required."
          git rebase --abort
          exit 1
        fi

    - name: Push changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        UPSTREAM_BRANCH="${{ github.event.inputs.upstream_branch || '$UPSTREAM_BRANCH' }}"
        git pull upstream $UPSTREAM_BRANCH
        git push origin $UPSTREAM_BRANCH --force-with-lease

    - name: Notify on sync failure
      if: failure()
      run: |
        echo "::error::Upstream sync failed - Manual intervention required"
        cat >> $GITHUB_STEP_SUMMARY << 'EOF'
        # ❌ Upstream Sync Failed
        
        The automated sync from upstream failed, likely due to merge conflicts.
        
        ## Manual Resolution Required
        
        Please follow these steps to resolve the sync manually:
        
        1. **Fetch upstream changes:**
           ```bash
           git fetch upstream
           ```
        
        2. **Merge upstream changes:**
           ```bash
           git merge upstream/$UPSTREAM_BRANCH
           ```
        
        3. **Resolve any conflicts** that appear in your editor
        
        4. **Push the resolved changes:**
           ```bash
           git push origin $UPSTREAM_BRANCH
           ```
        
        ## Workflow Details
        - **Run ID:** ${{ github.run_id }}
        - **Run URL:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        - **Repository:** ${{ github.repository }}
        - **Triggered by:** ${{ github.actor }}
        EOF

    - name: Summary
      if: always()
      run: |
        TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
        if [ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]; then
          if [ "${{ job.status }}" == "success" ]; then
            cat >> $GITHUB_STEP_SUMMARY << EOF
        # ✅ Upstream Sync Successful
        
        Successfully synced changes from upstream repository.
        
        ## Details
        - **Source:** \`upstream/$UPSTREAM_BRANCH\` → \`origin/$UPSTREAM_BRANCH\`
        - **Repository:** ${{ github.repository }}
        - **Sync Time:** $TIMESTAMP
        - **Triggered by:** ${{ github.actor }}
        
        Your repository is now up-to-date with the upstream changes.
        EOF
          else
            # Failure case is handled by the "Notify on sync failure" step above
            echo "Sync failed - see failure summary above"
          fi
        else
          cat >> $GITHUB_STEP_SUMMARY << EOF
        # ℹ️ No Changes to Sync
        
        Your repository is already up-to-date with the upstream repository.
        
        ## Details
        - **Source:** \`upstream/$UPSTREAM_BRANCH\`
        - **Repository:** ${{ github.repository }}
        - **Check Time:** $TIMESTAMP
        - **Triggered by:** ${{ github.actor }}
        
        No action was needed.
        EOF
        fi
